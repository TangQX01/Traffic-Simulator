# parameters
nc: 80  # number of classes
depth_multiple: 1.0  # model depth multiple
width_multiple: 1.0  # layer channel multiple

# anchors
anchors:
  - [10,13, 16,30, 33,23]  # P3/8
  - [30,61, 62,45, 59,119]  # P4/16
  - [116,90, 156,198, 373,326]  # P5/32

# custom backbone
backbone:
  # [from, number, module, args]
  [ [ -1, 1, stem, [ 16 ] ],    # 0-P2/4
    [ -1, 1, MBConvBlock, [ 16, 32, 3, 1 ] ], # 1-P3/8
    [ -1, 3, MBConvBlock, [ 16, 24, 3, 2 ] ], # 2
    [ -1, 1, MBConvBlock, [ 24, 40, 3, 2 ] ], # 3-P4/16
    [ -1, 7, MBConvBlock, [ 40, 80, 3, 2 ] ], # 4
    [ -1, 1, MBConvBlock, [ 80, 112, 3, 1 ] ], # 5-P5/32
    [ -1, 3, MBConvBlock, [ 112, 192, 3, 2 ] ], # 6
    [ -1, 3, MBConvBlock, [ 192, 320, 3, 1 ] ], # 7
  ]

# v5Lite-s head
head:
  [[-1, 1, Conv, [256, 1, 1]],
   [-1, 1, nn.Upsample, [None, 2, 'nearest']],
   [[-1, 5], 1, Concat, [1]],  # cat backbone P4
   [-1, 1, C3, [256, False]],  # 11

   [-1, 1, Conv, [128, 1, 1]],
   [-1, 1, nn.Upsample, [None, 2, 'nearest']],
   [[-1, 3], 1, Concat, [1]],  # cat backbone P3
   [-1, 1, C3, [128, False]],  # 15 (P3/8-small)

   [-1, 1, Conv, [128, 3, 2]],
   [[-1, 12], 1, Concat, [1]],  # cat head P4
   [-1, 1, C3, [256, False]],  # 18 (P4/16-medium)

   [-1, 1, Conv, [256, 3, 2]],
   [[-1, 8], 1, Concat, [1]],  # cat head P5
   [-1, 1, C3, [512, False]],  # 21 (P5/32-large)

   [[15, 18, 21], 1, Detect, [nc, anchors]],  # Detect(P3, P4, P5)
  ]