// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 4.0.30319.1
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------
using System;
using UnityEngine;

namespace SIP.FastVRTools.Cameras
{
	[Serializable]
	public class CharacterDriverJumping
	{
		/// <summary>
		/// If the charactor can jump.
		/// </summary>
		public bool m_enable = true;

		/// <summary>
		/// How high when we jump by pressing jump action.
		/// </summary>
		public float m_baseHeight = 1.0f;

		/// <summary>
		/// We add extraheight when we holding the jump button while jumping.
		/// </summary>
		public float m_extraHeight = 4.1f;

		/// <summary>
		/// How much does the character jump out perpendicular to the surface on walkable surfaces?
		/// 0 means a fully vertical jump and 1 means fully perpendicular.
		/// </summary>
		public float m_perpAmount = 0.0f;

		/// <summary>
		/// How much does the character jump out perpendicular to the surface on too steep surfaces?
		/// 0 means a fully vertical jump and 1 means fully perpendicular.
		/// </summary>
		public float m_steepPerpAmount = 0.5f;

		/// <summary>
		/// Are we jumping? (Initiated with jump button and not grounded yet)
		/// To see if we are just in the air (initiated by jumping OR falling) see the grounded variable.
		/// </summary>
		public bool m_jumping = false;

		/// <summary>
		/// To see if the jump button is holding down.
		/// </summary>
		public bool m_holdingJumpButton= false;

		/// <summary>
		/// The m_last start time.
		/// </summary>
		public float m_lastStartTime = 0.0f;

		/// <summary>
		/// The last button down time.
		/// </summary>
		public float m_lastButtonDownTime = 0.0f;

		/// <summary>
		/// The jump dirction
		/// </summary>
		public Vector3 m_jumpDir = Vector3.up;

		public CharacterDriverJumping ()
		{
		}
	}
}

